{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.reset = reset;\nexports.default = void 0;\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar ReactDOM = _interopRequireWildcard(require(\"react-dom\"));\n\nvar _utils = require(\"@material-ui/utils\");\n\nvar _styles = require(\"@material-ui/styles\");\n\nvar _Drawer = _interopRequireWildcard(require(\"../Drawer/Drawer\"));\n\nvar _ownerDocument = _interopRequireDefault(require(\"../utils/ownerDocument\"));\n\nvar _useEventCallback = _interopRequireDefault(require(\"../utils/useEventCallback\"));\n\nvar _transitions = require(\"../styles/transitions\");\n\nvar _useTheme = _interopRequireDefault(require(\"../styles/useTheme\"));\n\nvar _utils2 = require(\"../transitions/utils\");\n\nvar _NoSsr = _interopRequireDefault(require(\"../NoSsr\"));\n\nvar _SwipeArea = _interopRequireDefault(require(\"./SwipeArea\")); // This value is closed to what browsers are using internally to\n// trigger a native scroll.\n\n\nvar UNCERTAINTY_THRESHOLD = 3; // px\n// We can only have one node at the time claiming ownership for handling the swipe.\n// Otherwise, the UX would be confusing.\n// That's why we use a singleton here.\n\nvar nodeThatClaimedTheSwipe = null; // Exported for test purposes.\n\nfunction reset() {\n  nodeThatClaimedTheSwipe = null;\n}\n\nfunction calculateCurrentX(anchor, touches) {\n  return anchor === 'right' ? document.body.offsetWidth - touches[0].pageX : touches[0].pageX;\n}\n\nfunction calculateCurrentY(anchor, touches) {\n  return anchor === 'bottom' ? window.innerHeight - touches[0].clientY : touches[0].clientY;\n}\n\nfunction getMaxTranslate(horizontalSwipe, paperInstance) {\n  return horizontalSwipe ? paperInstance.clientWidth : paperInstance.clientHeight;\n}\n\nfunction getTranslate(currentTranslate, startLocation, open, maxTranslate) {\n  return Math.min(Math.max(open ? startLocation - currentTranslate : maxTranslate + startLocation - currentTranslate, 0), maxTranslate);\n}\n\nfunction getDomTreeShapes(element, rootNode) {\n  // Adapted from https://github.com/oliviertassinari/react-swipeable-views/blob/7666de1dba253b896911adf2790ce51467670856/packages/react-swipeable-views/src/SwipeableViews.js#L129\n  var domTreeShapes = [];\n\n  while (element && element !== rootNode) {\n    var style = window.getComputedStyle(element);\n\n    if ( // Ignore the scroll children if the element is absolute positioned.\n    style.getPropertyValue('position') === 'absolute' || // Ignore the scroll children if the element has an overflowX hidden\n    style.getPropertyValue('overflow-x') === 'hidden') {\n      domTreeShapes = [];\n    } else if (element.clientWidth > 0 && element.scrollWidth > element.clientWidth || element.clientHeight > 0 && element.scrollHeight > element.clientHeight) {\n      // Ignore the nodes that have no width.\n      // Keep elements with a scroll\n      domTreeShapes.push(element);\n    }\n\n    element = element.parentElement;\n  }\n\n  return domTreeShapes;\n}\n\nfunction findNativeHandler(_ref) {\n  var domTreeShapes = _ref.domTreeShapes,\n      start = _ref.start,\n      current = _ref.current,\n      anchor = _ref.anchor; // Adapted from https://github.com/oliviertassinari/react-swipeable-views/blob/7666de1dba253b896911adf2790ce51467670856/packages/react-swipeable-views/src/SwipeableViews.js#L175\n\n  var axisProperties = {\n    scrollPosition: {\n      x: 'scrollLeft',\n      y: 'scrollTop'\n    },\n    scrollLength: {\n      x: 'scrollWidth',\n      y: 'scrollHeight'\n    },\n    clientLength: {\n      x: 'clientWidth',\n      y: 'clientHeight'\n    }\n  };\n  return domTreeShapes.some(function (shape) {\n    // Determine if we are going backward or forward.\n    var goingForward = current >= start;\n\n    if (anchor === 'top' || anchor === 'left') {\n      goingForward = !goingForward;\n    }\n\n    var axis = anchor === 'left' || anchor === 'right' ? 'x' : 'y';\n    var scrollPosition = shape[axisProperties.scrollPosition[axis]];\n    var areNotAtStart = scrollPosition > 0;\n    var areNotAtEnd = scrollPosition + shape[axisProperties.clientLength[axis]] < shape[axisProperties.scrollLength[axis]];\n\n    if (goingForward && areNotAtEnd || !goingForward && areNotAtStart) {\n      return shape;\n    }\n\n    return null;\n  });\n}\n\nvar iOS = typeof navigator !== 'undefined' && /iPad|iPhone|iPod/.test(navigator.userAgent);\nvar transitionDurationDefault = {\n  enter: _transitions.duration.enteringScreen,\n  exit: _transitions.duration.leavingScreen\n};\nvar useEnhancedEffect = typeof window !== 'undefined' ? React.useLayoutEffect : React.useEffect;\nvar SwipeableDrawer = /*#__PURE__*/React.forwardRef(function SwipeableDrawer(inProps, ref) {\n  var theme = (0, _useTheme.default)();\n  var props = (0, _styles.getThemeProps)({\n    name: 'MuiSwipeableDrawer',\n    props: (0, _extends2.default)({}, inProps),\n    theme: theme\n  });\n  var _props$anchor = props.anchor,\n      anchor = _props$anchor === void 0 ? 'left' : _props$anchor,\n      _props$disableBackdro = props.disableBackdropTransition,\n      disableBackdropTransition = _props$disableBackdro === void 0 ? false : _props$disableBackdro,\n      _props$disableDiscove = props.disableDiscovery,\n      disableDiscovery = _props$disableDiscove === void 0 ? false : _props$disableDiscove,\n      _props$disableSwipeTo = props.disableSwipeToOpen,\n      disableSwipeToOpen = _props$disableSwipeTo === void 0 ? iOS : _props$disableSwipeTo,\n      hideBackdrop = props.hideBackdrop,\n      _props$hysteresis = props.hysteresis,\n      hysteresis = _props$hysteresis === void 0 ? 0.52 : _props$hysteresis,\n      _props$minFlingVeloci = props.minFlingVelocity,\n      minFlingVelocity = _props$minFlingVeloci === void 0 ? 450 : _props$minFlingVeloci,\n      _props$ModalProps = props.ModalProps;\n  _props$ModalProps = _props$ModalProps === void 0 ? {} : _props$ModalProps;\n  var BackdropProps = _props$ModalProps.BackdropProps,\n      ModalPropsProp = (0, _objectWithoutProperties2.default)(_props$ModalProps, [\"BackdropProps\"]),\n      onClose = props.onClose,\n      onOpen = props.onOpen,\n      open = props.open,\n      _props$PaperProps = props.PaperProps,\n      PaperProps = _props$PaperProps === void 0 ? {} : _props$PaperProps,\n      SwipeAreaProps = props.SwipeAreaProps,\n      _props$swipeAreaWidth = props.swipeAreaWidth,\n      swipeAreaWidth = _props$swipeAreaWidth === void 0 ? 20 : _props$swipeAreaWidth,\n      _props$transitionDura = props.transitionDuration,\n      transitionDuration = _props$transitionDura === void 0 ? transitionDurationDefault : _props$transitionDura,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'temporary' : _props$variant,\n      other = (0, _objectWithoutProperties2.default)(props, [\"anchor\", \"disableBackdropTransition\", \"disableDiscovery\", \"disableSwipeToOpen\", \"hideBackdrop\", \"hysteresis\", \"minFlingVelocity\", \"ModalProps\", \"onClose\", \"onOpen\", \"open\", \"PaperProps\", \"SwipeAreaProps\", \"swipeAreaWidth\", \"transitionDuration\", \"variant\"]);\n\n  var _React$useState = React.useState(false),\n      maybeSwiping = _React$useState[0],\n      setMaybeSwiping = _React$useState[1];\n\n  var swipeInstance = React.useRef({\n    isSwiping: null\n  });\n  var swipeAreaRef = React.useRef();\n  var backdropRef = React.useRef();\n  var paperRef = React.useRef();\n  var touchDetected = React.useRef(false); // Ref for transition duration based on / to match swipe speed\n\n  var calculatedDurationRef = React.useRef(); // Use a ref so the open value used is always up to date inside useCallback.\n\n  useEnhancedEffect(function () {\n    calculatedDurationRef.current = null;\n  }, [open]);\n  var setPosition = React.useCallback(function (translate) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var _options$mode = options.mode,\n        mode = _options$mode === void 0 ? null : _options$mode,\n        _options$changeTransi = options.changeTransition,\n        changeTransition = _options$changeTransi === void 0 ? true : _options$changeTransi;\n    var anchorRtl = (0, _Drawer.getAnchor)(theme, anchor);\n    var rtlTranslateMultiplier = ['right', 'bottom'].indexOf(anchorRtl) !== -1 ? 1 : -1;\n    var horizontalSwipe = (0, _Drawer.isHorizontal)(anchor);\n    var transform = horizontalSwipe ? \"translate(\".concat(rtlTranslateMultiplier * translate, \"px, 0)\") : \"translate(0, \".concat(rtlTranslateMultiplier * translate, \"px)\");\n    var drawerStyle = paperRef.current.style;\n    drawerStyle.webkitTransform = transform;\n    drawerStyle.transform = transform;\n    var transition = '';\n\n    if (mode) {\n      transition = theme.transitions.create('all', (0, _utils2.getTransitionProps)({\n        timeout: transitionDuration\n      }, {\n        mode: mode\n      }));\n    }\n\n    if (changeTransition) {\n      drawerStyle.webkitTransition = transition;\n      drawerStyle.transition = transition;\n    }\n\n    if (!disableBackdropTransition && !hideBackdrop) {\n      var backdropStyle = backdropRef.current.style;\n      backdropStyle.opacity = 1 - translate / getMaxTranslate(horizontalSwipe, paperRef.current);\n\n      if (changeTransition) {\n        backdropStyle.webkitTransition = transition;\n        backdropStyle.transition = transition;\n      }\n    }\n  }, [anchor, disableBackdropTransition, hideBackdrop, theme, transitionDuration]);\n  var handleBodyTouchEnd = (0, _useEventCallback.default)(function (event) {\n    if (!touchDetected.current) {\n      return;\n    }\n\n    nodeThatClaimedTheSwipe = null;\n    touchDetected.current = false;\n    setMaybeSwiping(false); // The swipe wasn't started.\n\n    if (!swipeInstance.current.isSwiping) {\n      swipeInstance.current.isSwiping = null;\n      return;\n    }\n\n    swipeInstance.current.isSwiping = null;\n    var anchorRtl = (0, _Drawer.getAnchor)(theme, anchor);\n    var horizontal = (0, _Drawer.isHorizontal)(anchor);\n    var current;\n\n    if (horizontal) {\n      current = calculateCurrentX(anchorRtl, event.changedTouches);\n    } else {\n      current = calculateCurrentY(anchorRtl, event.changedTouches);\n    }\n\n    var startLocation = horizontal ? swipeInstance.current.startX : swipeInstance.current.startY;\n    var maxTranslate = getMaxTranslate(horizontal, paperRef.current);\n    var currentTranslate = getTranslate(current, startLocation, open, maxTranslate);\n    var translateRatio = currentTranslate / maxTranslate;\n\n    if (Math.abs(swipeInstance.current.velocity) > minFlingVelocity) {\n      // Calculate transition duration to match swipe speed\n      calculatedDurationRef.current = Math.abs((maxTranslate - currentTranslate) / swipeInstance.current.velocity) * 1000;\n    }\n\n    if (open) {\n      if (swipeInstance.current.velocity > minFlingVelocity || translateRatio > hysteresis) {\n        onClose();\n      } else {\n        // Reset the position, the swipe was aborted.\n        setPosition(0, {\n          mode: 'exit'\n        });\n      }\n\n      return;\n    }\n\n    if (swipeInstance.current.velocity < -minFlingVelocity || 1 - translateRatio > hysteresis) {\n      onOpen();\n    } else {\n      // Reset the position, the swipe was aborted.\n      setPosition(getMaxTranslate(horizontal, paperRef.current), {\n        mode: 'enter'\n      });\n    }\n  });\n  var handleBodyTouchMove = (0, _useEventCallback.default)(function (event) {\n    // the ref may be null when a parent component updates while swiping\n    if (!paperRef.current || !touchDetected.current) {\n      return;\n    } // We are not supposed to handle this touch move because the swipe was started in a scrollable container in the drawer\n\n\n    if (nodeThatClaimedTheSwipe != null && nodeThatClaimedTheSwipe !== swipeInstance.current) {\n      return;\n    }\n\n    var anchorRtl = (0, _Drawer.getAnchor)(theme, anchor);\n    var horizontalSwipe = (0, _Drawer.isHorizontal)(anchor);\n    var currentX = calculateCurrentX(anchorRtl, event.touches);\n    var currentY = calculateCurrentY(anchorRtl, event.touches);\n\n    if (open && paperRef.current.contains(event.target) && nodeThatClaimedTheSwipe == null) {\n      var domTreeShapes = getDomTreeShapes(event.target, paperRef.current);\n      var nativeHandler = findNativeHandler({\n        domTreeShapes: domTreeShapes,\n        start: horizontalSwipe ? swipeInstance.current.startX : swipeInstance.current.startY,\n        current: horizontalSwipe ? currentX : currentY,\n        anchor: anchor\n      });\n\n      if (nativeHandler) {\n        nodeThatClaimedTheSwipe = nativeHandler;\n        return;\n      }\n\n      nodeThatClaimedTheSwipe = swipeInstance.current;\n    } // We don't know yet.\n\n\n    if (swipeInstance.current.isSwiping == null) {\n      var dx = Math.abs(currentX - swipeInstance.current.startX);\n      var dy = Math.abs(currentY - swipeInstance.current.startY); // We are likely to be swiping, let's prevent the scroll event on iOS.\n\n      if (dx > dy) {\n        if (event.cancelable) {\n          event.preventDefault();\n        }\n      }\n\n      var definitelySwiping = horizontalSwipe ? dx > dy && dx > UNCERTAINTY_THRESHOLD : dy > dx && dy > UNCERTAINTY_THRESHOLD;\n\n      if (definitelySwiping === true || (horizontalSwipe ? dy > UNCERTAINTY_THRESHOLD : dx > UNCERTAINTY_THRESHOLD)) {\n        swipeInstance.current.isSwiping = definitelySwiping;\n\n        if (!definitelySwiping) {\n          handleBodyTouchEnd(event);\n          return;\n        } // Shift the starting point.\n\n\n        swipeInstance.current.startX = currentX;\n        swipeInstance.current.startY = currentY; // Compensate for the part of the drawer displayed on touch start.\n\n        if (!disableDiscovery && !open) {\n          if (horizontalSwipe) {\n            swipeInstance.current.startX -= swipeAreaWidth;\n          } else {\n            swipeInstance.current.startY -= swipeAreaWidth;\n          }\n        }\n      }\n    }\n\n    if (!swipeInstance.current.isSwiping) {\n      return;\n    }\n\n    var maxTranslate = getMaxTranslate(horizontalSwipe, paperRef.current);\n    var startLocation = horizontalSwipe ? swipeInstance.current.startX : swipeInstance.current.startY;\n\n    if (open && !swipeInstance.current.paperHit) {\n      startLocation = Math.min(startLocation, maxTranslate);\n    }\n\n    var translate = getTranslate(horizontalSwipe ? currentX : currentY, startLocation, open, maxTranslate);\n\n    if (open) {\n      if (!swipeInstance.current.paperHit) {\n        var paperHit = horizontalSwipe ? currentX < maxTranslate : currentY < maxTranslate;\n\n        if (paperHit) {\n          swipeInstance.current.paperHit = true;\n          swipeInstance.current.startX = currentX;\n          swipeInstance.current.startY = currentY;\n        } else {\n          return;\n        }\n      } else if (translate === 0) {\n        swipeInstance.current.startX = currentX;\n        swipeInstance.current.startY = currentY;\n      }\n    }\n\n    if (swipeInstance.current.lastTranslate === null) {\n      swipeInstance.current.lastTranslate = translate;\n      swipeInstance.current.lastTime = performance.now() + 1;\n    }\n\n    var velocity = (translate - swipeInstance.current.lastTranslate) / (performance.now() - swipeInstance.current.lastTime) * 1e3; // Low Pass filter.\n\n    swipeInstance.current.velocity = swipeInstance.current.velocity * 0.4 + velocity * 0.6;\n    swipeInstance.current.lastTranslate = translate;\n    swipeInstance.current.lastTime = performance.now(); // We are swiping, let's prevent the scroll event on iOS.\n\n    if (event.cancelable) {\n      event.preventDefault();\n    }\n\n    setPosition(translate);\n  });\n  var handleBodyTouchStart = (0, _useEventCallback.default)(function (event) {\n    // We are not supposed to handle this touch move.\n    // Example of use case: ignore the event if there is a Slider.\n    if (event.defaultPrevented) {\n      return;\n    } // We can only have one node at the time claiming ownership for handling the swipe.\n\n\n    if (event.muiHandled) {\n      return;\n    } // At least one element clogs the drawer interaction zone.\n\n\n    if (open && !backdropRef.current.contains(event.target) && !paperRef.current.contains(event.target)) {\n      return;\n    }\n\n    var anchorRtl = (0, _Drawer.getAnchor)(theme, anchor);\n    var horizontalSwipe = (0, _Drawer.isHorizontal)(anchor);\n    var currentX = calculateCurrentX(anchorRtl, event.touches);\n    var currentY = calculateCurrentY(anchorRtl, event.touches);\n\n    if (!open) {\n      if (disableSwipeToOpen || event.target !== swipeAreaRef.current) {\n        return;\n      }\n\n      if (horizontalSwipe) {\n        if (currentX > swipeAreaWidth) {\n          return;\n        }\n      } else if (currentY > swipeAreaWidth) {\n        return;\n      }\n    }\n\n    event.muiHandled = true;\n    nodeThatClaimedTheSwipe = null;\n    swipeInstance.current.startX = currentX;\n    swipeInstance.current.startY = currentY;\n    setMaybeSwiping(true);\n\n    if (!open && paperRef.current) {\n      // The ref may be null when a parent component updates while swiping.\n      setPosition(getMaxTranslate(horizontalSwipe, paperRef.current) + (disableDiscovery ? 20 : -swipeAreaWidth), {\n        changeTransition: false\n      });\n    }\n\n    swipeInstance.current.velocity = 0;\n    swipeInstance.current.lastTime = null;\n    swipeInstance.current.lastTranslate = null;\n    swipeInstance.current.paperHit = false;\n    touchDetected.current = true;\n  });\n  React.useEffect(function () {\n    if (variant === 'temporary') {\n      var doc = (0, _ownerDocument.default)(paperRef.current);\n      doc.addEventListener('touchstart', handleBodyTouchStart);\n      doc.addEventListener('touchmove', handleBodyTouchMove, {\n        passive: false\n      });\n      doc.addEventListener('touchend', handleBodyTouchEnd);\n      return function () {\n        doc.removeEventListener('touchstart', handleBodyTouchStart);\n        doc.removeEventListener('touchmove', handleBodyTouchMove, {\n          passive: false\n        });\n        doc.removeEventListener('touchend', handleBodyTouchEnd);\n      };\n    }\n\n    return undefined;\n  }, [variant, handleBodyTouchStart, handleBodyTouchMove, handleBodyTouchEnd]);\n  React.useEffect(function () {\n    return function () {\n      // We need to release the lock.\n      if (nodeThatClaimedTheSwipe === swipeInstance.current) {\n        nodeThatClaimedTheSwipe = null;\n      }\n    };\n  }, []);\n  React.useEffect(function () {\n    if (!open) {\n      setMaybeSwiping(false);\n    }\n  }, [open]);\n  var handleBackdropRef = React.useCallback(function (instance) {\n    // #StrictMode ready\n    backdropRef.current = ReactDOM.findDOMNode(instance);\n  }, []);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(_Drawer.default, (0, _extends2.default)({\n    open: variant === 'temporary' && maybeSwiping ? true : open,\n    variant: variant,\n    ModalProps: (0, _extends2.default)({\n      BackdropProps: (0, _extends2.default)({}, BackdropProps, {\n        ref: handleBackdropRef\n      })\n    }, ModalPropsProp),\n    PaperProps: (0, _extends2.default)({}, PaperProps, {\n      style: (0, _extends2.default)({\n        pointerEvents: variant === 'temporary' && !open ? 'none' : ''\n      }, PaperProps.style),\n      ref: paperRef\n    }),\n    anchor: anchor,\n    transitionDuration: calculatedDurationRef.current || transitionDuration,\n    onClose: onClose,\n    ref: ref\n  }, other)), !disableSwipeToOpen && variant === 'temporary' && /*#__PURE__*/React.createElement(_NoSsr.default, null, /*#__PURE__*/React.createElement(_SwipeArea.default, (0, _extends2.default)({\n    anchor: anchor,\n    ref: swipeAreaRef,\n    width: swipeAreaWidth\n  }, SwipeAreaProps))));\n});\nprocess.env.NODE_ENV !== \"production\" ? SwipeableDrawer.propTypes = {\n  /**\n   * @ignore\n   */\n  anchor: _propTypes.default.oneOf(['left', 'top', 'right', 'bottom']),\n\n  /**\n   * The content of the component.\n   */\n  children: _propTypes.default.node,\n\n  /**\n   * Disable the backdrop transition.\n   * This can improve the FPS on low-end devices.\n   */\n  disableBackdropTransition: _propTypes.default.bool,\n\n  /**\n   * If `true`, touching the screen near the edge of the drawer will not slide in the drawer a bit\n   * to promote accidental discovery of the swipe gesture.\n   */\n  disableDiscovery: _propTypes.default.bool,\n\n  /**\n   * If `true`, swipe to open is disabled. This is useful in browsers where swiping triggers\n   * navigation actions. Swipe to open is disabled on iOS browsers by default.\n   */\n  disableSwipeToOpen: _propTypes.default.bool,\n\n  /**\n   * @ignore\n   */\n  hideBackdrop: _propTypes.default.bool,\n\n  /**\n   * Affects how far the drawer must be opened/closed to change his state.\n   * Specified as percent (0-1) of the width of the drawer\n   */\n  hysteresis: _propTypes.default.number,\n\n  /**\n   * Defines, from which (average) velocity on, the swipe is\n   * defined as complete although hysteresis isn't reached.\n   * Good threshold is between 250 - 1000 px/s\n   */\n  minFlingVelocity: _propTypes.default.number,\n\n  /**\n   * @ignore\n   */\n  ModalProps: _propTypes.default.shape({\n    BackdropProps: _propTypes.default.shape({\n      component: _utils.elementTypeAcceptingRef\n    })\n  }),\n\n  /**\n   * Callback fired when the component requests to be closed.\n   *\n   * @param {object} event The event source of the callback.\n   */\n  onClose: _propTypes.default.func.isRequired,\n\n  /**\n   * Callback fired when the component requests to be opened.\n   *\n   * @param {object} event The event source of the callback.\n   */\n  onOpen: _propTypes.default.func.isRequired,\n\n  /**\n   * If `true`, the drawer is open.\n   */\n  open: _propTypes.default.bool.isRequired,\n\n  /**\n   * @ignore\n   */\n  PaperProps: _propTypes.default.shape({\n    component: _utils.elementTypeAcceptingRef,\n    style: _propTypes.default.object\n  }),\n\n  /**\n   * The element is used to intercept the touch events on the edge.\n   */\n  SwipeAreaProps: _propTypes.default.object,\n\n  /**\n   * The width of the left most (or right most) area in pixels where the\n   * drawer can be swiped open from.\n   */\n  swipeAreaWidth: _propTypes.default.number,\n\n  /**\n   * The duration for the transition, in milliseconds.\n   * You may specify a single timeout for all transitions, or individually with an object.\n   */\n  transitionDuration: _propTypes.default.oneOfType([_propTypes.default.number, _propTypes.default.shape({\n    enter: _propTypes.default.number,\n    exit: _propTypes.default.number\n  })]),\n\n  /**\n   * @ignore\n   */\n  variant: _propTypes.default.oneOf(['permanent', 'persistent', 'temporary'])\n} : void 0;\nvar _default = SwipeableDrawer;\nexports.default = _default;","map":{"version":3,"names":["_interopRequireWildcard","require","_interopRequireDefault","Object","defineProperty","exports","value","reset","default","_objectWithoutProperties2","_extends2","React","_propTypes","ReactDOM","_utils","_styles","_Drawer","_ownerDocument","_useEventCallback","_transitions","_useTheme","_utils2","_NoSsr","_SwipeArea","UNCERTAINTY_THRESHOLD","nodeThatClaimedTheSwipe","calculateCurrentX","anchor","touches","document","body","offsetWidth","pageX","calculateCurrentY","window","innerHeight","clientY","getMaxTranslate","horizontalSwipe","paperInstance","clientWidth","clientHeight","getTranslate","currentTranslate","startLocation","open","maxTranslate","Math","min","max","getDomTreeShapes","element","rootNode","domTreeShapes","style","getComputedStyle","getPropertyValue","scrollWidth","scrollHeight","push","parentElement","findNativeHandler","_ref","start","current","axisProperties","scrollPosition","x","y","scrollLength","clientLength","some","shape","goingForward","axis","areNotAtStart","areNotAtEnd","iOS","navigator","test","userAgent","transitionDurationDefault","enter","duration","enteringScreen","exit","leavingScreen","useEnhancedEffect","useLayoutEffect","useEffect","SwipeableDrawer","forwardRef","inProps","ref","theme","props","getThemeProps","name","_props$anchor","_props$disableBackdro","disableBackdropTransition","_props$disableDiscove","disableDiscovery","_props$disableSwipeTo","disableSwipeToOpen","hideBackdrop","_props$hysteresis","hysteresis","_props$minFlingVeloci","minFlingVelocity","_props$ModalProps","ModalProps","BackdropProps","ModalPropsProp","onClose","onOpen","_props$PaperProps","PaperProps","SwipeAreaProps","_props$swipeAreaWidth","swipeAreaWidth","_props$transitionDura","transitionDuration","_props$variant","variant","other","_React$useState","useState","maybeSwiping","setMaybeSwiping","swipeInstance","useRef","isSwiping","swipeAreaRef","backdropRef","paperRef","touchDetected","calculatedDurationRef","setPosition","useCallback","translate","options","arguments","length","undefined","_options$mode","mode","_options$changeTransi","changeTransition","anchorRtl","getAnchor","rtlTranslateMultiplier","indexOf","isHorizontal","transform","concat","drawerStyle","webkitTransform","transition","transitions","create","getTransitionProps","timeout","webkitTransition","backdropStyle","opacity","handleBodyTouchEnd","event","horizontal","changedTouches","startX","startY","translateRatio","abs","velocity","handleBodyTouchMove","currentX","currentY","contains","target","nativeHandler","dx","dy","cancelable","preventDefault","definitelySwiping","paperHit","lastTranslate","lastTime","performance","now","handleBodyTouchStart","defaultPrevented","muiHandled","doc","addEventListener","passive","removeEventListener","handleBackdropRef","instance","findDOMNode","createElement","Fragment","pointerEvents","width","process","env","NODE_ENV","propTypes","oneOf","children","node","bool","number","component","elementTypeAcceptingRef","func","isRequired","object","oneOfType","_default"],"sources":["C:/Users/azeve/OneDrive/Documentos/silveira-Luiz-Azevedo/modulo6/case2/frontend/case2/node_modules/@material-ui/core/SwipeableDrawer/SwipeableDrawer.js"],"sourcesContent":["\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.reset = reset;\nexports.default = void 0;\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar ReactDOM = _interopRequireWildcard(require(\"react-dom\"));\n\nvar _utils = require(\"@material-ui/utils\");\n\nvar _styles = require(\"@material-ui/styles\");\n\nvar _Drawer = _interopRequireWildcard(require(\"../Drawer/Drawer\"));\n\nvar _ownerDocument = _interopRequireDefault(require(\"../utils/ownerDocument\"));\n\nvar _useEventCallback = _interopRequireDefault(require(\"../utils/useEventCallback\"));\n\nvar _transitions = require(\"../styles/transitions\");\n\nvar _useTheme = _interopRequireDefault(require(\"../styles/useTheme\"));\n\nvar _utils2 = require(\"../transitions/utils\");\n\nvar _NoSsr = _interopRequireDefault(require(\"../NoSsr\"));\n\nvar _SwipeArea = _interopRequireDefault(require(\"./SwipeArea\"));\n\n// This value is closed to what browsers are using internally to\n// trigger a native scroll.\nvar UNCERTAINTY_THRESHOLD = 3; // px\n// We can only have one node at the time claiming ownership for handling the swipe.\n// Otherwise, the UX would be confusing.\n// That's why we use a singleton here.\n\nvar nodeThatClaimedTheSwipe = null; // Exported for test purposes.\n\nfunction reset() {\n  nodeThatClaimedTheSwipe = null;\n}\n\nfunction calculateCurrentX(anchor, touches) {\n  return anchor === 'right' ? document.body.offsetWidth - touches[0].pageX : touches[0].pageX;\n}\n\nfunction calculateCurrentY(anchor, touches) {\n  return anchor === 'bottom' ? window.innerHeight - touches[0].clientY : touches[0].clientY;\n}\n\nfunction getMaxTranslate(horizontalSwipe, paperInstance) {\n  return horizontalSwipe ? paperInstance.clientWidth : paperInstance.clientHeight;\n}\n\nfunction getTranslate(currentTranslate, startLocation, open, maxTranslate) {\n  return Math.min(Math.max(open ? startLocation - currentTranslate : maxTranslate + startLocation - currentTranslate, 0), maxTranslate);\n}\n\nfunction getDomTreeShapes(element, rootNode) {\n  // Adapted from https://github.com/oliviertassinari/react-swipeable-views/blob/7666de1dba253b896911adf2790ce51467670856/packages/react-swipeable-views/src/SwipeableViews.js#L129\n  var domTreeShapes = [];\n\n  while (element && element !== rootNode) {\n    var style = window.getComputedStyle(element);\n\n    if ( // Ignore the scroll children if the element is absolute positioned.\n    style.getPropertyValue('position') === 'absolute' || // Ignore the scroll children if the element has an overflowX hidden\n    style.getPropertyValue('overflow-x') === 'hidden') {\n      domTreeShapes = [];\n    } else if (element.clientWidth > 0 && element.scrollWidth > element.clientWidth || element.clientHeight > 0 && element.scrollHeight > element.clientHeight) {\n      // Ignore the nodes that have no width.\n      // Keep elements with a scroll\n      domTreeShapes.push(element);\n    }\n\n    element = element.parentElement;\n  }\n\n  return domTreeShapes;\n}\n\nfunction findNativeHandler(_ref) {\n  var domTreeShapes = _ref.domTreeShapes,\n      start = _ref.start,\n      current = _ref.current,\n      anchor = _ref.anchor;\n  // Adapted from https://github.com/oliviertassinari/react-swipeable-views/blob/7666de1dba253b896911adf2790ce51467670856/packages/react-swipeable-views/src/SwipeableViews.js#L175\n  var axisProperties = {\n    scrollPosition: {\n      x: 'scrollLeft',\n      y: 'scrollTop'\n    },\n    scrollLength: {\n      x: 'scrollWidth',\n      y: 'scrollHeight'\n    },\n    clientLength: {\n      x: 'clientWidth',\n      y: 'clientHeight'\n    }\n  };\n  return domTreeShapes.some(function (shape) {\n    // Determine if we are going backward or forward.\n    var goingForward = current >= start;\n\n    if (anchor === 'top' || anchor === 'left') {\n      goingForward = !goingForward;\n    }\n\n    var axis = anchor === 'left' || anchor === 'right' ? 'x' : 'y';\n    var scrollPosition = shape[axisProperties.scrollPosition[axis]];\n    var areNotAtStart = scrollPosition > 0;\n    var areNotAtEnd = scrollPosition + shape[axisProperties.clientLength[axis]] < shape[axisProperties.scrollLength[axis]];\n\n    if (goingForward && areNotAtEnd || !goingForward && areNotAtStart) {\n      return shape;\n    }\n\n    return null;\n  });\n}\n\nvar iOS = typeof navigator !== 'undefined' && /iPad|iPhone|iPod/.test(navigator.userAgent);\nvar transitionDurationDefault = {\n  enter: _transitions.duration.enteringScreen,\n  exit: _transitions.duration.leavingScreen\n};\nvar useEnhancedEffect = typeof window !== 'undefined' ? React.useLayoutEffect : React.useEffect;\nvar SwipeableDrawer = /*#__PURE__*/React.forwardRef(function SwipeableDrawer(inProps, ref) {\n  var theme = (0, _useTheme.default)();\n  var props = (0, _styles.getThemeProps)({\n    name: 'MuiSwipeableDrawer',\n    props: (0, _extends2.default)({}, inProps),\n    theme: theme\n  });\n  var _props$anchor = props.anchor,\n      anchor = _props$anchor === void 0 ? 'left' : _props$anchor,\n      _props$disableBackdro = props.disableBackdropTransition,\n      disableBackdropTransition = _props$disableBackdro === void 0 ? false : _props$disableBackdro,\n      _props$disableDiscove = props.disableDiscovery,\n      disableDiscovery = _props$disableDiscove === void 0 ? false : _props$disableDiscove,\n      _props$disableSwipeTo = props.disableSwipeToOpen,\n      disableSwipeToOpen = _props$disableSwipeTo === void 0 ? iOS : _props$disableSwipeTo,\n      hideBackdrop = props.hideBackdrop,\n      _props$hysteresis = props.hysteresis,\n      hysteresis = _props$hysteresis === void 0 ? 0.52 : _props$hysteresis,\n      _props$minFlingVeloci = props.minFlingVelocity,\n      minFlingVelocity = _props$minFlingVeloci === void 0 ? 450 : _props$minFlingVeloci,\n      _props$ModalProps = props.ModalProps;\n  _props$ModalProps = _props$ModalProps === void 0 ? {} : _props$ModalProps;\n  var BackdropProps = _props$ModalProps.BackdropProps,\n      ModalPropsProp = (0, _objectWithoutProperties2.default)(_props$ModalProps, [\"BackdropProps\"]),\n      onClose = props.onClose,\n      onOpen = props.onOpen,\n      open = props.open,\n      _props$PaperProps = props.PaperProps,\n      PaperProps = _props$PaperProps === void 0 ? {} : _props$PaperProps,\n      SwipeAreaProps = props.SwipeAreaProps,\n      _props$swipeAreaWidth = props.swipeAreaWidth,\n      swipeAreaWidth = _props$swipeAreaWidth === void 0 ? 20 : _props$swipeAreaWidth,\n      _props$transitionDura = props.transitionDuration,\n      transitionDuration = _props$transitionDura === void 0 ? transitionDurationDefault : _props$transitionDura,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'temporary' : _props$variant,\n      other = (0, _objectWithoutProperties2.default)(props, [\"anchor\", \"disableBackdropTransition\", \"disableDiscovery\", \"disableSwipeToOpen\", \"hideBackdrop\", \"hysteresis\", \"minFlingVelocity\", \"ModalProps\", \"onClose\", \"onOpen\", \"open\", \"PaperProps\", \"SwipeAreaProps\", \"swipeAreaWidth\", \"transitionDuration\", \"variant\"]);\n\n  var _React$useState = React.useState(false),\n      maybeSwiping = _React$useState[0],\n      setMaybeSwiping = _React$useState[1];\n\n  var swipeInstance = React.useRef({\n    isSwiping: null\n  });\n  var swipeAreaRef = React.useRef();\n  var backdropRef = React.useRef();\n  var paperRef = React.useRef();\n  var touchDetected = React.useRef(false); // Ref for transition duration based on / to match swipe speed\n\n  var calculatedDurationRef = React.useRef(); // Use a ref so the open value used is always up to date inside useCallback.\n\n  useEnhancedEffect(function () {\n    calculatedDurationRef.current = null;\n  }, [open]);\n  var setPosition = React.useCallback(function (translate) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var _options$mode = options.mode,\n        mode = _options$mode === void 0 ? null : _options$mode,\n        _options$changeTransi = options.changeTransition,\n        changeTransition = _options$changeTransi === void 0 ? true : _options$changeTransi;\n    var anchorRtl = (0, _Drawer.getAnchor)(theme, anchor);\n    var rtlTranslateMultiplier = ['right', 'bottom'].indexOf(anchorRtl) !== -1 ? 1 : -1;\n    var horizontalSwipe = (0, _Drawer.isHorizontal)(anchor);\n    var transform = horizontalSwipe ? \"translate(\".concat(rtlTranslateMultiplier * translate, \"px, 0)\") : \"translate(0, \".concat(rtlTranslateMultiplier * translate, \"px)\");\n    var drawerStyle = paperRef.current.style;\n    drawerStyle.webkitTransform = transform;\n    drawerStyle.transform = transform;\n    var transition = '';\n\n    if (mode) {\n      transition = theme.transitions.create('all', (0, _utils2.getTransitionProps)({\n        timeout: transitionDuration\n      }, {\n        mode: mode\n      }));\n    }\n\n    if (changeTransition) {\n      drawerStyle.webkitTransition = transition;\n      drawerStyle.transition = transition;\n    }\n\n    if (!disableBackdropTransition && !hideBackdrop) {\n      var backdropStyle = backdropRef.current.style;\n      backdropStyle.opacity = 1 - translate / getMaxTranslate(horizontalSwipe, paperRef.current);\n\n      if (changeTransition) {\n        backdropStyle.webkitTransition = transition;\n        backdropStyle.transition = transition;\n      }\n    }\n  }, [anchor, disableBackdropTransition, hideBackdrop, theme, transitionDuration]);\n  var handleBodyTouchEnd = (0, _useEventCallback.default)(function (event) {\n    if (!touchDetected.current) {\n      return;\n    }\n\n    nodeThatClaimedTheSwipe = null;\n    touchDetected.current = false;\n    setMaybeSwiping(false); // The swipe wasn't started.\n\n    if (!swipeInstance.current.isSwiping) {\n      swipeInstance.current.isSwiping = null;\n      return;\n    }\n\n    swipeInstance.current.isSwiping = null;\n    var anchorRtl = (0, _Drawer.getAnchor)(theme, anchor);\n    var horizontal = (0, _Drawer.isHorizontal)(anchor);\n    var current;\n\n    if (horizontal) {\n      current = calculateCurrentX(anchorRtl, event.changedTouches);\n    } else {\n      current = calculateCurrentY(anchorRtl, event.changedTouches);\n    }\n\n    var startLocation = horizontal ? swipeInstance.current.startX : swipeInstance.current.startY;\n    var maxTranslate = getMaxTranslate(horizontal, paperRef.current);\n    var currentTranslate = getTranslate(current, startLocation, open, maxTranslate);\n    var translateRatio = currentTranslate / maxTranslate;\n\n    if (Math.abs(swipeInstance.current.velocity) > minFlingVelocity) {\n      // Calculate transition duration to match swipe speed\n      calculatedDurationRef.current = Math.abs((maxTranslate - currentTranslate) / swipeInstance.current.velocity) * 1000;\n    }\n\n    if (open) {\n      if (swipeInstance.current.velocity > minFlingVelocity || translateRatio > hysteresis) {\n        onClose();\n      } else {\n        // Reset the position, the swipe was aborted.\n        setPosition(0, {\n          mode: 'exit'\n        });\n      }\n\n      return;\n    }\n\n    if (swipeInstance.current.velocity < -minFlingVelocity || 1 - translateRatio > hysteresis) {\n      onOpen();\n    } else {\n      // Reset the position, the swipe was aborted.\n      setPosition(getMaxTranslate(horizontal, paperRef.current), {\n        mode: 'enter'\n      });\n    }\n  });\n  var handleBodyTouchMove = (0, _useEventCallback.default)(function (event) {\n    // the ref may be null when a parent component updates while swiping\n    if (!paperRef.current || !touchDetected.current) {\n      return;\n    } // We are not supposed to handle this touch move because the swipe was started in a scrollable container in the drawer\n\n\n    if (nodeThatClaimedTheSwipe != null && nodeThatClaimedTheSwipe !== swipeInstance.current) {\n      return;\n    }\n\n    var anchorRtl = (0, _Drawer.getAnchor)(theme, anchor);\n    var horizontalSwipe = (0, _Drawer.isHorizontal)(anchor);\n    var currentX = calculateCurrentX(anchorRtl, event.touches);\n    var currentY = calculateCurrentY(anchorRtl, event.touches);\n\n    if (open && paperRef.current.contains(event.target) && nodeThatClaimedTheSwipe == null) {\n      var domTreeShapes = getDomTreeShapes(event.target, paperRef.current);\n      var nativeHandler = findNativeHandler({\n        domTreeShapes: domTreeShapes,\n        start: horizontalSwipe ? swipeInstance.current.startX : swipeInstance.current.startY,\n        current: horizontalSwipe ? currentX : currentY,\n        anchor: anchor\n      });\n\n      if (nativeHandler) {\n        nodeThatClaimedTheSwipe = nativeHandler;\n        return;\n      }\n\n      nodeThatClaimedTheSwipe = swipeInstance.current;\n    } // We don't know yet.\n\n\n    if (swipeInstance.current.isSwiping == null) {\n      var dx = Math.abs(currentX - swipeInstance.current.startX);\n      var dy = Math.abs(currentY - swipeInstance.current.startY); // We are likely to be swiping, let's prevent the scroll event on iOS.\n\n      if (dx > dy) {\n        if (event.cancelable) {\n          event.preventDefault();\n        }\n      }\n\n      var definitelySwiping = horizontalSwipe ? dx > dy && dx > UNCERTAINTY_THRESHOLD : dy > dx && dy > UNCERTAINTY_THRESHOLD;\n\n      if (definitelySwiping === true || (horizontalSwipe ? dy > UNCERTAINTY_THRESHOLD : dx > UNCERTAINTY_THRESHOLD)) {\n        swipeInstance.current.isSwiping = definitelySwiping;\n\n        if (!definitelySwiping) {\n          handleBodyTouchEnd(event);\n          return;\n        } // Shift the starting point.\n\n\n        swipeInstance.current.startX = currentX;\n        swipeInstance.current.startY = currentY; // Compensate for the part of the drawer displayed on touch start.\n\n        if (!disableDiscovery && !open) {\n          if (horizontalSwipe) {\n            swipeInstance.current.startX -= swipeAreaWidth;\n          } else {\n            swipeInstance.current.startY -= swipeAreaWidth;\n          }\n        }\n      }\n    }\n\n    if (!swipeInstance.current.isSwiping) {\n      return;\n    }\n\n    var maxTranslate = getMaxTranslate(horizontalSwipe, paperRef.current);\n    var startLocation = horizontalSwipe ? swipeInstance.current.startX : swipeInstance.current.startY;\n\n    if (open && !swipeInstance.current.paperHit) {\n      startLocation = Math.min(startLocation, maxTranslate);\n    }\n\n    var translate = getTranslate(horizontalSwipe ? currentX : currentY, startLocation, open, maxTranslate);\n\n    if (open) {\n      if (!swipeInstance.current.paperHit) {\n        var paperHit = horizontalSwipe ? currentX < maxTranslate : currentY < maxTranslate;\n\n        if (paperHit) {\n          swipeInstance.current.paperHit = true;\n          swipeInstance.current.startX = currentX;\n          swipeInstance.current.startY = currentY;\n        } else {\n          return;\n        }\n      } else if (translate === 0) {\n        swipeInstance.current.startX = currentX;\n        swipeInstance.current.startY = currentY;\n      }\n    }\n\n    if (swipeInstance.current.lastTranslate === null) {\n      swipeInstance.current.lastTranslate = translate;\n      swipeInstance.current.lastTime = performance.now() + 1;\n    }\n\n    var velocity = (translate - swipeInstance.current.lastTranslate) / (performance.now() - swipeInstance.current.lastTime) * 1e3; // Low Pass filter.\n\n    swipeInstance.current.velocity = swipeInstance.current.velocity * 0.4 + velocity * 0.6;\n    swipeInstance.current.lastTranslate = translate;\n    swipeInstance.current.lastTime = performance.now(); // We are swiping, let's prevent the scroll event on iOS.\n\n    if (event.cancelable) {\n      event.preventDefault();\n    }\n\n    setPosition(translate);\n  });\n  var handleBodyTouchStart = (0, _useEventCallback.default)(function (event) {\n    // We are not supposed to handle this touch move.\n    // Example of use case: ignore the event if there is a Slider.\n    if (event.defaultPrevented) {\n      return;\n    } // We can only have one node at the time claiming ownership for handling the swipe.\n\n\n    if (event.muiHandled) {\n      return;\n    } // At least one element clogs the drawer interaction zone.\n\n\n    if (open && !backdropRef.current.contains(event.target) && !paperRef.current.contains(event.target)) {\n      return;\n    }\n\n    var anchorRtl = (0, _Drawer.getAnchor)(theme, anchor);\n    var horizontalSwipe = (0, _Drawer.isHorizontal)(anchor);\n    var currentX = calculateCurrentX(anchorRtl, event.touches);\n    var currentY = calculateCurrentY(anchorRtl, event.touches);\n\n    if (!open) {\n      if (disableSwipeToOpen || event.target !== swipeAreaRef.current) {\n        return;\n      }\n\n      if (horizontalSwipe) {\n        if (currentX > swipeAreaWidth) {\n          return;\n        }\n      } else if (currentY > swipeAreaWidth) {\n        return;\n      }\n    }\n\n    event.muiHandled = true;\n    nodeThatClaimedTheSwipe = null;\n    swipeInstance.current.startX = currentX;\n    swipeInstance.current.startY = currentY;\n    setMaybeSwiping(true);\n\n    if (!open && paperRef.current) {\n      // The ref may be null when a parent component updates while swiping.\n      setPosition(getMaxTranslate(horizontalSwipe, paperRef.current) + (disableDiscovery ? 20 : -swipeAreaWidth), {\n        changeTransition: false\n      });\n    }\n\n    swipeInstance.current.velocity = 0;\n    swipeInstance.current.lastTime = null;\n    swipeInstance.current.lastTranslate = null;\n    swipeInstance.current.paperHit = false;\n    touchDetected.current = true;\n  });\n  React.useEffect(function () {\n    if (variant === 'temporary') {\n      var doc = (0, _ownerDocument.default)(paperRef.current);\n      doc.addEventListener('touchstart', handleBodyTouchStart);\n      doc.addEventListener('touchmove', handleBodyTouchMove, {\n        passive: false\n      });\n      doc.addEventListener('touchend', handleBodyTouchEnd);\n      return function () {\n        doc.removeEventListener('touchstart', handleBodyTouchStart);\n        doc.removeEventListener('touchmove', handleBodyTouchMove, {\n          passive: false\n        });\n        doc.removeEventListener('touchend', handleBodyTouchEnd);\n      };\n    }\n\n    return undefined;\n  }, [variant, handleBodyTouchStart, handleBodyTouchMove, handleBodyTouchEnd]);\n  React.useEffect(function () {\n    return function () {\n      // We need to release the lock.\n      if (nodeThatClaimedTheSwipe === swipeInstance.current) {\n        nodeThatClaimedTheSwipe = null;\n      }\n    };\n  }, []);\n  React.useEffect(function () {\n    if (!open) {\n      setMaybeSwiping(false);\n    }\n  }, [open]);\n  var handleBackdropRef = React.useCallback(function (instance) {\n    // #StrictMode ready\n    backdropRef.current = ReactDOM.findDOMNode(instance);\n  }, []);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(_Drawer.default, (0, _extends2.default)({\n    open: variant === 'temporary' && maybeSwiping ? true : open,\n    variant: variant,\n    ModalProps: (0, _extends2.default)({\n      BackdropProps: (0, _extends2.default)({}, BackdropProps, {\n        ref: handleBackdropRef\n      })\n    }, ModalPropsProp),\n    PaperProps: (0, _extends2.default)({}, PaperProps, {\n      style: (0, _extends2.default)({\n        pointerEvents: variant === 'temporary' && !open ? 'none' : ''\n      }, PaperProps.style),\n      ref: paperRef\n    }),\n    anchor: anchor,\n    transitionDuration: calculatedDurationRef.current || transitionDuration,\n    onClose: onClose,\n    ref: ref\n  }, other)), !disableSwipeToOpen && variant === 'temporary' && /*#__PURE__*/React.createElement(_NoSsr.default, null, /*#__PURE__*/React.createElement(_SwipeArea.default, (0, _extends2.default)({\n    anchor: anchor,\n    ref: swipeAreaRef,\n    width: swipeAreaWidth\n  }, SwipeAreaProps))));\n});\nprocess.env.NODE_ENV !== \"production\" ? SwipeableDrawer.propTypes = {\n  /**\n   * @ignore\n   */\n  anchor: _propTypes.default.oneOf(['left', 'top', 'right', 'bottom']),\n\n  /**\n   * The content of the component.\n   */\n  children: _propTypes.default.node,\n\n  /**\n   * Disable the backdrop transition.\n   * This can improve the FPS on low-end devices.\n   */\n  disableBackdropTransition: _propTypes.default.bool,\n\n  /**\n   * If `true`, touching the screen near the edge of the drawer will not slide in the drawer a bit\n   * to promote accidental discovery of the swipe gesture.\n   */\n  disableDiscovery: _propTypes.default.bool,\n\n  /**\n   * If `true`, swipe to open is disabled. This is useful in browsers where swiping triggers\n   * navigation actions. Swipe to open is disabled on iOS browsers by default.\n   */\n  disableSwipeToOpen: _propTypes.default.bool,\n\n  /**\n   * @ignore\n   */\n  hideBackdrop: _propTypes.default.bool,\n\n  /**\n   * Affects how far the drawer must be opened/closed to change his state.\n   * Specified as percent (0-1) of the width of the drawer\n   */\n  hysteresis: _propTypes.default.number,\n\n  /**\n   * Defines, from which (average) velocity on, the swipe is\n   * defined as complete although hysteresis isn't reached.\n   * Good threshold is between 250 - 1000 px/s\n   */\n  minFlingVelocity: _propTypes.default.number,\n\n  /**\n   * @ignore\n   */\n  ModalProps: _propTypes.default.shape({\n    BackdropProps: _propTypes.default.shape({\n      component: _utils.elementTypeAcceptingRef\n    })\n  }),\n\n  /**\n   * Callback fired when the component requests to be closed.\n   *\n   * @param {object} event The event source of the callback.\n   */\n  onClose: _propTypes.default.func.isRequired,\n\n  /**\n   * Callback fired when the component requests to be opened.\n   *\n   * @param {object} event The event source of the callback.\n   */\n  onOpen: _propTypes.default.func.isRequired,\n\n  /**\n   * If `true`, the drawer is open.\n   */\n  open: _propTypes.default.bool.isRequired,\n\n  /**\n   * @ignore\n   */\n  PaperProps: _propTypes.default.shape({\n    component: _utils.elementTypeAcceptingRef,\n    style: _propTypes.default.object\n  }),\n\n  /**\n   * The element is used to intercept the touch events on the edge.\n   */\n  SwipeAreaProps: _propTypes.default.object,\n\n  /**\n   * The width of the left most (or right most) area in pixels where the\n   * drawer can be swiped open from.\n   */\n  swipeAreaWidth: _propTypes.default.number,\n\n  /**\n   * The duration for the transition, in milliseconds.\n   * You may specify a single timeout for all transitions, or individually with an object.\n   */\n  transitionDuration: _propTypes.default.oneOfType([_propTypes.default.number, _propTypes.default.shape({\n    enter: _propTypes.default.number,\n    exit: _propTypes.default.number\n  })]),\n\n  /**\n   * @ignore\n   */\n  variant: _propTypes.default.oneOf(['permanent', 'persistent', 'temporary'])\n} : void 0;\nvar _default = SwipeableDrawer;\nexports.default = _default;"],"mappings":"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"},"metadata":{},"sourceType":"script"}