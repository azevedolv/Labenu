{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _debounce = _interopRequireDefault(require(\"../utils/debounce\"));\n\nvar _useForkRef = _interopRequireDefault(require(\"../utils/useForkRef\"));\n\nvar _deprecatedPropType = _interopRequireDefault(require(\"../utils/deprecatedPropType\"));\n\nfunction getStyleValue(computedStyle, property) {\n  return parseInt(computedStyle[property], 10) || 0;\n}\n\nvar useEnhancedEffect = typeof window !== 'undefined' ? React.useLayoutEffect : React.useEffect;\nvar styles = {\n  /* Styles applied to the shadow textarea element. */\n  shadow: {\n    // Visibility needed to hide the extra text area on iPads\n    visibility: 'hidden',\n    // Remove from the content flow\n    position: 'absolute',\n    // Ignore the scrollbar width\n    overflow: 'hidden',\n    height: 0,\n    top: 0,\n    left: 0,\n    // Create a new layer, increase the isolation of the computed values\n    transform: 'translateZ(0)'\n  }\n};\nvar TextareaAutosize = /*#__PURE__*/React.forwardRef(function TextareaAutosize(props, ref) {\n  var onChange = props.onChange,\n      rows = props.rows,\n      rowsMax = props.rowsMax,\n      rowsMinProp = props.rowsMin,\n      maxRowsProp = props.maxRows,\n      _props$minRows = props.minRows,\n      minRowsProp = _props$minRows === void 0 ? 1 : _props$minRows,\n      style = props.style,\n      value = props.value,\n      other = (0, _objectWithoutProperties2.default)(props, [\"onChange\", \"rows\", \"rowsMax\", \"rowsMin\", \"maxRows\", \"minRows\", \"style\", \"value\"]);\n  var maxRows = maxRowsProp || rowsMax;\n  var minRows = rows || rowsMinProp || minRowsProp;\n\n  var _React$useRef = React.useRef(value != null),\n      isControlled = _React$useRef.current;\n\n  var inputRef = React.useRef(null);\n  var handleRef = (0, _useForkRef.default)(ref, inputRef);\n  var shadowRef = React.useRef(null);\n  var renders = React.useRef(0);\n\n  var _React$useState = React.useState({}),\n      state = _React$useState[0],\n      setState = _React$useState[1];\n\n  var syncHeight = React.useCallback(function () {\n    var input = inputRef.current;\n    var computedStyle = window.getComputedStyle(input);\n    var inputShallow = shadowRef.current;\n    inputShallow.style.width = computedStyle.width;\n    inputShallow.value = input.value || props.placeholder || 'x';\n\n    if (inputShallow.value.slice(-1) === '\\n') {\n      // Certain fonts which overflow the line height will cause the textarea\n      // to report a different scrollHeight depending on whether the last line\n      // is empty. Make it non-empty to avoid this issue.\n      inputShallow.value += ' ';\n    }\n\n    var boxSizing = computedStyle['box-sizing'];\n    var padding = getStyleValue(computedStyle, 'padding-bottom') + getStyleValue(computedStyle, 'padding-top');\n    var border = getStyleValue(computedStyle, 'border-bottom-width') + getStyleValue(computedStyle, 'border-top-width'); // The height of the inner content\n\n    var innerHeight = inputShallow.scrollHeight - padding; // Measure height of a textarea with a single row\n\n    inputShallow.value = 'x';\n    var singleRowHeight = inputShallow.scrollHeight - padding; // The height of the outer content\n\n    var outerHeight = innerHeight;\n\n    if (minRows) {\n      outerHeight = Math.max(Number(minRows) * singleRowHeight, outerHeight);\n    }\n\n    if (maxRows) {\n      outerHeight = Math.min(Number(maxRows) * singleRowHeight, outerHeight);\n    }\n\n    outerHeight = Math.max(outerHeight, singleRowHeight); // Take the box sizing into account for applying this value as a style.\n\n    var outerHeightStyle = outerHeight + (boxSizing === 'border-box' ? padding + border : 0);\n    var overflow = Math.abs(outerHeight - innerHeight) <= 1;\n    setState(function (prevState) {\n      // Need a large enough difference to update the height.\n      // This prevents infinite rendering loop.\n      if (renders.current < 20 && (outerHeightStyle > 0 && Math.abs((prevState.outerHeightStyle || 0) - outerHeightStyle) > 1 || prevState.overflow !== overflow)) {\n        renders.current += 1;\n        return {\n          overflow: overflow,\n          outerHeightStyle: outerHeightStyle\n        };\n      }\n\n      if (process.env.NODE_ENV !== 'production') {\n        if (renders.current === 20) {\n          console.error(['Material-UI: Too many re-renders. The layout is unstable.', 'TextareaAutosize limits the number of renders to prevent an infinite loop.'].join('\\n'));\n        }\n      }\n\n      return prevState;\n    });\n  }, [maxRows, minRows, props.placeholder]);\n  React.useEffect(function () {\n    var handleResize = (0, _debounce.default)(function () {\n      renders.current = 0;\n      syncHeight();\n    });\n    window.addEventListener('resize', handleResize);\n    return function () {\n      handleResize.clear();\n      window.removeEventListener('resize', handleResize);\n    };\n  }, [syncHeight]);\n  useEnhancedEffect(function () {\n    syncHeight();\n  });\n  React.useEffect(function () {\n    renders.current = 0;\n  }, [value]);\n\n  var handleChange = function handleChange(event) {\n    renders.current = 0;\n\n    if (!isControlled) {\n      syncHeight();\n    }\n\n    if (onChange) {\n      onChange(event);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"textarea\", (0, _extends2.default)({\n    value: value,\n    onChange: handleChange,\n    ref: handleRef // Apply the rows prop to get a \"correct\" first SSR paint\n    ,\n    rows: minRows,\n    style: (0, _extends2.default)({\n      height: state.outerHeightStyle,\n      // Need a large enough difference to allow scrolling.\n      // This prevents infinite rendering loop.\n      overflow: state.overflow ? 'hidden' : null\n    }, style)\n  }, other)), /*#__PURE__*/React.createElement(\"textarea\", {\n    \"aria-hidden\": true,\n    className: props.className,\n    readOnly: true,\n    ref: shadowRef,\n    tabIndex: -1,\n    style: (0, _extends2.default)({}, styles.shadow, style)\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? TextareaAutosize.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * @ignore\n   */\n  className: _propTypes.default.string,\n\n  /**\n   * Maximum number of rows to display.\n   */\n  maxRows: _propTypes.default.oneOfType([_propTypes.default.number, _propTypes.default.string]),\n\n  /**\n   * Minimum number of rows to display.\n   */\n  minRows: _propTypes.default.oneOfType([_propTypes.default.number, _propTypes.default.string]),\n\n  /**\n   * @ignore\n   */\n  onChange: _propTypes.default.func,\n\n  /**\n   * @ignore\n   */\n  placeholder: _propTypes.default.string,\n\n  /**\n   * Minimum number of rows to display.\n   * @deprecated Use `minRows` instead.\n   */\n  rows: (0, _deprecatedPropType.default)(_propTypes.default.oneOfType([_propTypes.default.number, _propTypes.default.string]), 'Use `minRows` instead.'),\n\n  /**\n   * Maximum number of rows to display.\n   * @deprecated Use `maxRows` instead.\n   */\n  rowsMax: (0, _deprecatedPropType.default)(_propTypes.default.oneOfType([_propTypes.default.number, _propTypes.default.string]), 'Use `maxRows` instead.'),\n\n  /**\n   * Minimum number of rows to display.\n   * @deprecated Use `minRows` instead.\n   */\n  rowsMin: (0, _deprecatedPropType.default)(_propTypes.default.oneOfType([_propTypes.default.number, _propTypes.default.string]), 'Use `minRows` instead.'),\n\n  /**\n   * @ignore\n   */\n  style: _propTypes.default.object,\n\n  /**\n   * @ignore\n   */\n  value: _propTypes.default.oneOfType([_propTypes.default.arrayOf(_propTypes.default.string), _propTypes.default.number, _propTypes.default.string])\n} : void 0;\nvar _default = TextareaAutosize;\nexports.default = _default;","map":{"version":3,"names":["_interopRequireWildcard","require","_interopRequireDefault","Object","defineProperty","exports","value","default","_extends2","_objectWithoutProperties2","React","_propTypes","_debounce","_useForkRef","_deprecatedPropType","getStyleValue","computedStyle","property","parseInt","useEnhancedEffect","window","useLayoutEffect","useEffect","styles","shadow","visibility","position","overflow","height","top","left","transform","TextareaAutosize","forwardRef","props","ref","onChange","rows","rowsMax","rowsMinProp","rowsMin","maxRowsProp","maxRows","_props$minRows","minRows","minRowsProp","style","other","_React$useRef","useRef","isControlled","current","inputRef","handleRef","shadowRef","renders","_React$useState","useState","state","setState","syncHeight","useCallback","input","getComputedStyle","inputShallow","width","placeholder","slice","boxSizing","padding","border","innerHeight","scrollHeight","singleRowHeight","outerHeight","Math","max","Number","min","outerHeightStyle","abs","prevState","process","env","NODE_ENV","console","error","join","handleResize","addEventListener","clear","removeEventListener","handleChange","event","createElement","Fragment","className","readOnly","tabIndex","propTypes","string","oneOfType","number","func","object","arrayOf","_default"],"sources":["C:/Users/azeve/OneDrive/Documentos/silveira-Luiz-Azevedo/modulo6/case2/frontend/case2/node_modules/@material-ui/core/TextareaAutosize/TextareaAutosize.js"],"sourcesContent":["\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _debounce = _interopRequireDefault(require(\"../utils/debounce\"));\n\nvar _useForkRef = _interopRequireDefault(require(\"../utils/useForkRef\"));\n\nvar _deprecatedPropType = _interopRequireDefault(require(\"../utils/deprecatedPropType\"));\n\nfunction getStyleValue(computedStyle, property) {\n  return parseInt(computedStyle[property], 10) || 0;\n}\n\nvar useEnhancedEffect = typeof window !== 'undefined' ? React.useLayoutEffect : React.useEffect;\nvar styles = {\n  /* Styles applied to the shadow textarea element. */\n  shadow: {\n    // Visibility needed to hide the extra text area on iPads\n    visibility: 'hidden',\n    // Remove from the content flow\n    position: 'absolute',\n    // Ignore the scrollbar width\n    overflow: 'hidden',\n    height: 0,\n    top: 0,\n    left: 0,\n    // Create a new layer, increase the isolation of the computed values\n    transform: 'translateZ(0)'\n  }\n};\nvar TextareaAutosize = /*#__PURE__*/React.forwardRef(function TextareaAutosize(props, ref) {\n  var onChange = props.onChange,\n      rows = props.rows,\n      rowsMax = props.rowsMax,\n      rowsMinProp = props.rowsMin,\n      maxRowsProp = props.maxRows,\n      _props$minRows = props.minRows,\n      minRowsProp = _props$minRows === void 0 ? 1 : _props$minRows,\n      style = props.style,\n      value = props.value,\n      other = (0, _objectWithoutProperties2.default)(props, [\"onChange\", \"rows\", \"rowsMax\", \"rowsMin\", \"maxRows\", \"minRows\", \"style\", \"value\"]);\n  var maxRows = maxRowsProp || rowsMax;\n  var minRows = rows || rowsMinProp || minRowsProp;\n\n  var _React$useRef = React.useRef(value != null),\n      isControlled = _React$useRef.current;\n\n  var inputRef = React.useRef(null);\n  var handleRef = (0, _useForkRef.default)(ref, inputRef);\n  var shadowRef = React.useRef(null);\n  var renders = React.useRef(0);\n\n  var _React$useState = React.useState({}),\n      state = _React$useState[0],\n      setState = _React$useState[1];\n\n  var syncHeight = React.useCallback(function () {\n    var input = inputRef.current;\n    var computedStyle = window.getComputedStyle(input);\n    var inputShallow = shadowRef.current;\n    inputShallow.style.width = computedStyle.width;\n    inputShallow.value = input.value || props.placeholder || 'x';\n\n    if (inputShallow.value.slice(-1) === '\\n') {\n      // Certain fonts which overflow the line height will cause the textarea\n      // to report a different scrollHeight depending on whether the last line\n      // is empty. Make it non-empty to avoid this issue.\n      inputShallow.value += ' ';\n    }\n\n    var boxSizing = computedStyle['box-sizing'];\n    var padding = getStyleValue(computedStyle, 'padding-bottom') + getStyleValue(computedStyle, 'padding-top');\n    var border = getStyleValue(computedStyle, 'border-bottom-width') + getStyleValue(computedStyle, 'border-top-width'); // The height of the inner content\n\n    var innerHeight = inputShallow.scrollHeight - padding; // Measure height of a textarea with a single row\n\n    inputShallow.value = 'x';\n    var singleRowHeight = inputShallow.scrollHeight - padding; // The height of the outer content\n\n    var outerHeight = innerHeight;\n\n    if (minRows) {\n      outerHeight = Math.max(Number(minRows) * singleRowHeight, outerHeight);\n    }\n\n    if (maxRows) {\n      outerHeight = Math.min(Number(maxRows) * singleRowHeight, outerHeight);\n    }\n\n    outerHeight = Math.max(outerHeight, singleRowHeight); // Take the box sizing into account for applying this value as a style.\n\n    var outerHeightStyle = outerHeight + (boxSizing === 'border-box' ? padding + border : 0);\n    var overflow = Math.abs(outerHeight - innerHeight) <= 1;\n    setState(function (prevState) {\n      // Need a large enough difference to update the height.\n      // This prevents infinite rendering loop.\n      if (renders.current < 20 && (outerHeightStyle > 0 && Math.abs((prevState.outerHeightStyle || 0) - outerHeightStyle) > 1 || prevState.overflow !== overflow)) {\n        renders.current += 1;\n        return {\n          overflow: overflow,\n          outerHeightStyle: outerHeightStyle\n        };\n      }\n\n      if (process.env.NODE_ENV !== 'production') {\n        if (renders.current === 20) {\n          console.error(['Material-UI: Too many re-renders. The layout is unstable.', 'TextareaAutosize limits the number of renders to prevent an infinite loop.'].join('\\n'));\n        }\n      }\n\n      return prevState;\n    });\n  }, [maxRows, minRows, props.placeholder]);\n  React.useEffect(function () {\n    var handleResize = (0, _debounce.default)(function () {\n      renders.current = 0;\n      syncHeight();\n    });\n    window.addEventListener('resize', handleResize);\n    return function () {\n      handleResize.clear();\n      window.removeEventListener('resize', handleResize);\n    };\n  }, [syncHeight]);\n  useEnhancedEffect(function () {\n    syncHeight();\n  });\n  React.useEffect(function () {\n    renders.current = 0;\n  }, [value]);\n\n  var handleChange = function handleChange(event) {\n    renders.current = 0;\n\n    if (!isControlled) {\n      syncHeight();\n    }\n\n    if (onChange) {\n      onChange(event);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"textarea\", (0, _extends2.default)({\n    value: value,\n    onChange: handleChange,\n    ref: handleRef // Apply the rows prop to get a \"correct\" first SSR paint\n    ,\n    rows: minRows,\n    style: (0, _extends2.default)({\n      height: state.outerHeightStyle,\n      // Need a large enough difference to allow scrolling.\n      // This prevents infinite rendering loop.\n      overflow: state.overflow ? 'hidden' : null\n    }, style)\n  }, other)), /*#__PURE__*/React.createElement(\"textarea\", {\n    \"aria-hidden\": true,\n    className: props.className,\n    readOnly: true,\n    ref: shadowRef,\n    tabIndex: -1,\n    style: (0, _extends2.default)({}, styles.shadow, style)\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? TextareaAutosize.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * @ignore\n   */\n  className: _propTypes.default.string,\n\n  /**\n   * Maximum number of rows to display.\n   */\n  maxRows: _propTypes.default.oneOfType([_propTypes.default.number, _propTypes.default.string]),\n\n  /**\n   * Minimum number of rows to display.\n   */\n  minRows: _propTypes.default.oneOfType([_propTypes.default.number, _propTypes.default.string]),\n\n  /**\n   * @ignore\n   */\n  onChange: _propTypes.default.func,\n\n  /**\n   * @ignore\n   */\n  placeholder: _propTypes.default.string,\n\n  /**\n   * Minimum number of rows to display.\n   * @deprecated Use `minRows` instead.\n   */\n  rows: (0, _deprecatedPropType.default)(_propTypes.default.oneOfType([_propTypes.default.number, _propTypes.default.string]), 'Use `minRows` instead.'),\n\n  /**\n   * Maximum number of rows to display.\n   * @deprecated Use `maxRows` instead.\n   */\n  rowsMax: (0, _deprecatedPropType.default)(_propTypes.default.oneOfType([_propTypes.default.number, _propTypes.default.string]), 'Use `maxRows` instead.'),\n\n  /**\n   * Minimum number of rows to display.\n   * @deprecated Use `minRows` instead.\n   */\n  rowsMin: (0, _deprecatedPropType.default)(_propTypes.default.oneOfType([_propTypes.default.number, _propTypes.default.string]), 'Use `minRows` instead.'),\n\n  /**\n   * @ignore\n   */\n  style: _propTypes.default.object,\n\n  /**\n   * @ignore\n   */\n  value: _propTypes.default.oneOfType([_propTypes.default.arrayOf(_propTypes.default.string), _propTypes.default.number, _propTypes.default.string])\n} : void 0;\nvar _default = TextareaAutosize;\nexports.default = _default;"],"mappings":"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"},"metadata":{},"sourceType":"script"}